<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.control.Menu?>
<?import javafx.scene.control.MenuBar?>
<?import javafx.scene.control.MenuItem?>
<?import javafx.scene.control.SeparatorMenuItem?>
<?import javafx.scene.control.TextArea?>
<?import javafx.scene.control.TextField?>
<?import javafx.scene.control.ToolBar?>
<?import javafx.scene.input.KeyCodeCombination?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.text.Font?>

<AnchorPane fx:id="root" prefHeight="472.0" prefWidth="642.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="controller.EditorFormController">
   <children>
      <MenuBar fx:id="menuBar" layoutX="7.0" layoutY="14.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
        <menus>
          <Menu fx:id="menuFile" mnemonicParsing="false" text="File">
            <items>
              <MenuItem mnemonicParsing="false" onAction="#mnuItemNew_OnAction" text="New">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="N" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuFileOpen_OnAction" text="Open">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="O" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuSave_OnAction" text="Save">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="S" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuSaveAs_OnAction" text="Save As" />
                  <SeparatorMenuItem mnemonicParsing="false" />
                  <MenuItem mnemonicParsing="false" onAction="#mnuPageSetup_OnAction" text="Page Setup" />
                  <MenuItem mnemonicParsing="false" onAction="#mnuPrint_OnAction" text="Print" />
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemExit_OnAction" text="Exit">
                     <accelerator>
                        <KeyCodeCombination alt="DOWN" code="F4" control="UP" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
            </items>
          </Menu>
          <Menu fx:id="menuEdit" mnemonicParsing="false" text="Edit">
            <items>
              <MenuItem mnemonicParsing="false" onAction="#mnuItemCut_OnAction" text="Cut">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="X" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemCopy_OnAction" text="Copy">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="C" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemPaste_OnAction" text="Paste">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="V" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemFontSize_OnAction" text="Font Size" />
                  <SeparatorMenuItem mnemonicParsing="false" />
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemFind_OnAction" text="Find">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="F" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemReplace_OnAction" text="Replace">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="R" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
                  <SeparatorMenuItem mnemonicParsing="false" />
                  <MenuItem mnemonicParsing="false" onAction="#mnuItemSelectAll_OnAction" text="Select All">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="A" control="DOWN" meta="UP" shift="UP" shortcut="UP" />
                     </accelerator>
                  </MenuItem>
            </items>
          </Menu>
          <Menu fx:id="menuHelp" mnemonicParsing="false" text="Help">
            <items>
              <MenuItem mnemonicParsing="false" text="About">
                     <accelerator>
                        <KeyCodeCombination alt="UP" code="F1" control="UP" meta="UP" shift="UP" shortcut="ANY" />
                     </accelerator>
                  </MenuItem>
            </items>
          </Menu>
        </menus>
      </MenuBar>
      <TextArea fx:id="txtEditor" layoutX="-6.0" layoutY="28.0" onDragDropped="#txtEditorDragDropped_OnAction" onDragOver="#txtEditorDragOver_OnAction" prefHeight="424.0" prefWidth="648.0" text="A regular expression (shortened as regex or regexp;[1] also referred to as rational expression[2][3]) is a sequence of characters that specifies a search pattern. Usually such patterns are used by string-searching algorithms for &quot;find&quot; or &quot;find and replace&quot; operations on strings, or for input validation. It is a technique developed in theoretical computer science and formal language theory.&#10;&#10;The concept arose in the 1950s when the American mathematician Stephen Cole Kleene formalized the description of a regular language. The concept came into common use with Unix text-processing utilities. Different syntaxes for writing regular expressions have existed since the 1980s, one being the POSIX standard and another, widely used, being the Perl syntax.&#10;&#10;Regular expressions are used in search engines, search and replace dialogs of word processors and text editors, in text processing utilities such as sed and AWK and in lexical analysis. Many programming languages provide regex capabilities either built-in or via libraries, as it has uses in many situations.&#10;&#10;Patterns&#10;The phrase regular expressions, or regexes, is often used to mean the specific, standard textual syntax for representing patterns for matching text, as distinct from the mathematical notation described below. Each character in a regular expression (that is, each character in the string describing its pattern) is either a metacharacter, having a special meaning, or a regular character that has a literal meaning. For example, in the regex b., 'b' is a literal character that matches just 'b', while '.' is a metacharacter that matches every character except a newline. Therefore, this regex matches, for example, 'b%', or 'bx', or 'b5'. Together, metacharacters and literal characters can be used to identify text of a given pattern or process a number of instances of it. Pattern matches may vary from a precise equality to a very general similarity, as controlled by the metacharacters. For example, . is a very general pattern, [a-z] (match all lower case letters from 'a' to 'z') is less general and b is a precise pattern (matches just 'b'). The metacharacter syntax is designed specifically to represent prescribed targets in a concise and flexible way to direct the automation of text processing of a variety of input data, in a form easy to type using a standard ASCII keyboard." wrapText="true" AnchorPane.bottomAnchor="20.0" AnchorPane.leftAnchor="-6.0" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="28.0">
         <font>
            <Font size="18.0" />
         </font></TextArea>
      <ToolBar fx:id="toolBar" layoutY="438.0" prefHeight="20.0" prefWidth="642.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="0.0" />
      <AnchorPane fx:id="pneFind" layoutX="264.0" layoutY="14.0" prefHeight="53.0" prefWidth="314.0" style="-fx-background-color: white; -fx-border-color: gray; -fx-border-radius: 5;" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
         <children>
            <TextField fx:id="txtSearch" layoutX="14.0" layoutY="14.0" prefHeight="26.0" prefWidth="203.0" style="-fx-border-radius: 10;" />
            <Button layoutX="221.0" layoutY="14.0" mnemonicParsing="false" onAction="#btnFindNext_OnAction" prefHeight="26.0" prefWidth="41.0" text="↓" />
            <Button layoutX="265.0" layoutY="14.0" mnemonicParsing="false" onAction="#btnFindPrevious_OnAction" prefHeight="26.0" prefWidth="41.0" text="↑" />
         </children>
      </AnchorPane>
      <AnchorPane fx:id="pneReplace" layoutX="348.0" prefHeight="116.0" prefWidth="314.0" style="-fx-background-color: white; -fx-border-color: gray; -fx-border-radius: 5;" AnchorPane.rightAnchor="0.0" AnchorPane.topAnchor="0.0">
         <children>
            <TextField fx:id="txtSearch1" layoutX="14.0" layoutY="14.0" prefHeight="26.0" prefWidth="203.0" style="-fx-border-radius: 10;" />
            <Button layoutX="221.0" layoutY="14.0" mnemonicParsing="false" onAction="#btnFindNext_OnAction" prefHeight="26.0" prefWidth="41.0" text="↓" />
            <Button layoutX="265.0" layoutY="14.0" mnemonicParsing="false" onAction="#btnFindPrevious_OnAction" prefHeight="26.0" prefWidth="41.0" text="↑" />
            <TextField fx:id="txtReplace" layoutX="14.0" layoutY="47.0" prefHeight="26.0" prefWidth="293.0" style="-fx-border-radius: 10;" />
            <Button layoutX="41.0" layoutY="81.0" mnemonicParsing="false" onAction="#btnReplace_OnAction" prefHeight="26.0" prefWidth="75.0" text="Replace" />
            <Button layoutX="167.0" layoutY="81.0" mnemonicParsing="false" onAction="#btnReplaceAll_OnAction" prefHeight="26.0" prefWidth="91.0" text="Replace All" />
         </children>
      </AnchorPane>
   </children>
</AnchorPane>
